#!/usr/bin/env ruby

require 'rubygems'

require 'amqp'
require 'mongo'
require 'cloudfiles'

CONFIG_DIR = File.join(File.dirname(File.expand_path(__FILE__)), "..", "config")

MQ_CONF = YAML.load_file(File.join(CONFIG_DIR, "mq.yml"))["default"]

MONGO_CONF = YAML.load_file(File.join(CONFIG_DIR, "mongo.yml"))["default"]

CF_CONF = YAML.load_file(File.join(CONFIG_DIR, "cf.yml"))["default"]

AMQP.start(MQ_CONF["uri"]) do |connection|
  Signal.trap('INT') { connection.close { EventMachine.stop } }
  Signal.trap('TERM') { connection.close { EventMachine.stop } }

  channel = AMQP::Channel.new(connection)

  channel.queue("savvy.images", :auto_delete => true).subscribe do |payload|

    mongo_db = Mongo::MongoClient.new(MONGO_CONF["host"], MONGO_CONF["port"]).db("meta")
    image_meta = mongo_db.collection("images").find("_id" => payload)

    cf = CloudFiles::Connection.new(:username => CF_CONF["username"], :api_key => CF_CONF["password"], :snet => true)

    container = cf.container(image_meta.author)

    image_object = container.object("#{image_meta.md5}-orig")

    # TODO Mime check?
    
    tmp_path = File.join(File::SEPARATOR, "tmp", "#{image_meta.author}-#{image_meta.md5}-orig")

    image_file = File.new(tmp_path, "wb")
    image_file.write(image_object.data)
    image_file.close

    image = Magick::Image.read(tmp_path).first

    images = {}

    images["thumb"] = image.change_geometry("100x100") { |cols,rows,img| img.resize!(cols, rows) }
    images["small"] = image.change_geometry("640x480") { |cols,rows,img| img.resize!(cols, rows) }
    images["medium"] = image.change_geometry("800x600") { |cols,rows,img| img.resize!(cols, rows) }
    images["large"] = image.change_geometry("1024x768") { |cols,rows,img| img.resize!(cols, rows) }

    images.each do |key,value|
      image_object = container.create_object("#{image_meta.md5}-#{key}", false)
      image_object.write(value)
    end

  end
end

